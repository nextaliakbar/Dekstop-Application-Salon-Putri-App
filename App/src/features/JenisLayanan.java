/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Dialog.java to edit this template
 */
package features;
import control.ControlJenisLayanan;
import event.TableEvent;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import model.ModelHeaderTable;
import model.ModelRenderTable;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableRowSorter;
import model.ModelJenisLayanan;
import swing.TableCellEditor;
import swing.TableCellEventRender;
/**
 *
 * @author usER
 */
public class JenisLayanan extends java.awt.Dialog {

    /**
     * Creates new form DialogData
     */
    private DefaultTableModel tabmodel1;
    private TableEvent event;
    private TableRowSorter<DefaultTableModel> tableRowSorter1;
    private ControlJenisLayanan controlJenis = new ControlJenisLayanan();
    public ModelJenisLayanan modelJenis;
    public JenisLayanan(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        styleTable(scroll, tableData, 2);
        tabmodel1 = (DefaultTableModel) tableData.getModel();
        tableRowSorter1 = new TableRowSorter<>(tabmodel1);
        tableData.setRowSorter(tableRowSorter1);
        modelJenis = new ModelJenisLayanan();
        tampilData();
        cariDataTable();
        eventTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        panelData = new javax.swing.JPanel();
        btnTambah = new javax.swing.JButton();
        txtCari = new javax.swing.JTextField();
        scroll = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        panelTambah = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnBatal = new javax.swing.JButton();
        txtJenis = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIdJenis = new javax.swing.JTextField();
        btnSimpan = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        setLayout(new java.awt.CardLayout());

        panel.setBackground(new java.awt.Color(255, 255, 255));
        panel.setLayout(new java.awt.CardLayout());

        panelData.setBackground(new java.awt.Color(255, 255, 255));

        btnTambah.setBackground(new java.awt.Color(149, 2, 179));
        btnTambah.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnTambah.setForeground(new java.awt.Color(255, 255, 255));
        btnTambah.setText("Tambah Jenis Layanan Baru");
        btnTambah.setBorderPainted(false);
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        txtCari.setBackground(new java.awt.Color(255, 255, 255));
        txtCari.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtCari.setForeground(new java.awt.Color(185, 185, 185));
        txtCari.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCari.setText("Cari ID Jenis atau Jenis Layanan");
        txtCari.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(185, 185, 185)));
        txtCari.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCariFocusGained(evt);
            }
        });

        tableData.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Jenis Layanan", "Jenis Layanan", "         Opsi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableData.setSelectionBackground(new java.awt.Color(255, 255, 255));
        tableData.setSelectionForeground(new java.awt.Color(255, 255, 255));
        scroll.setViewportView(tableData);
        if (tableData.getColumnModel().getColumnCount() > 0) {
            tableData.getColumnModel().getColumn(2).setMinWidth(200);
            tableData.getColumnModel().getColumn(2).setPreferredWidth(200);
            tableData.getColumnModel().getColumn(2).setMaxWidth(200);
        }

        jLabel3.setBackground(new java.awt.Color(149, 2, 179));
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Pilih Jenis Layanan");
        jLabel3.setOpaque(true);

        jButton1.setBackground(new java.awt.Color(0, 153, 0));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("PILIH");
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDataLayout = new javax.swing.GroupLayout(panelData);
        panelData.setLayout(panelDataLayout);
        panelDataLayout.setHorizontalGroup(
            panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelDataLayout.setVerticalGroup(
            panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDataLayout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTambah))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE))
        );

        panel.add(panelData, "card2");

        panelTambah.setBackground(new java.awt.Color(185, 185, 185));

        jLabel4.setBackground(new java.awt.Color(149, 2, 179));
        jLabel4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Tambah Jenis Layanan");
        jLabel4.setOpaque(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnBatal.setBackground(new java.awt.Color(149, 2, 179));
        btnBatal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnBatal.setForeground(new java.awt.Color(255, 255, 255));
        btnBatal.setText("BATAL");
        btnBatal.setBorderPainted(false);
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        txtJenis.setBackground(new java.awt.Color(255, 255, 255));
        txtJenis.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        txtJenis.setForeground(new java.awt.Color(185, 185, 185));
        txtJenis.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtJenis.setText("Contoh Y-Lash Premium");
        txtJenis.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(185, 185, 185)));
        txtJenis.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtJenisFocusGained(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(149, 2, 179));
        jLabel6.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Jenis Layanan");

        jLabel5.setBackground(new java.awt.Color(149, 2, 179));
        jLabel5.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("ID Jenis Layanan");

        txtIdJenis.setBackground(new java.awt.Color(255, 255, 255));
        txtIdJenis.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        txtIdJenis.setForeground(new java.awt.Color(0, 0, 0));
        txtIdJenis.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtIdJenis.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(185, 185, 185)));

        btnSimpan.setBackground(new java.awt.Color(149, 2, 179));
        btnSimpan.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnSimpan.setForeground(new java.awt.Color(255, 255, 255));
        btnSimpan.setText("SIMPAN");
        btnSimpan.setBorderPainted(false);
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIdJenis, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtJenis, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(301, Short.MAX_VALUE)
                        .addComponent(btnSimpan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBatal)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdJenis, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtJenis, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBatal)
                    .addComponent(btnSimpan))
                .addContainerGap())
        );

        javax.swing.GroupLayout panelTambahLayout = new javax.swing.GroupLayout(panelTambah);
        panelTambah.setLayout(panelTambahLayout);
        panelTambahLayout.setHorizontalGroup(
            panelTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTambahLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelTambahLayout.setVerticalGroup(
            panelTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTambahLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(429, Short.MAX_VALUE))
        );

        panel.add(panelTambah, "card2");

        add(panel, "card2");

        setSize(new java.awt.Dimension(659, 675));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void txtCariFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCariFocusGained
        txtCari.setText("");
        txtCari.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_txtCariFocusGained

    private void txtJenisFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtJenisFocusGained
        if(txtJenis.getText().equals("Contoh Y-Lash Premium")) {
            txtJenis.setText("");
        }
            txtJenis.setForeground(new Color(0, 0, 0));   
    }//GEN-LAST:event_txtJenisFocusGained

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        changePanel(panelTambah);
        txtIdJenis.setText(controlJenis.autoID());
        txtIdJenis.setEnabled(false);
        txtJenis.setText("Contoh Y-Lash Premium");
        txtJenis.setForeground(new Color(185, 185, 185));
        btnSimpan.setText("SIMPAN");
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        if(btnSimpan.getText().equals("SIMPAN")) {
            if(validasiTambahData()) {
                tambahData();
                changePanel(panelData);
                tabmodel1.setRowCount(0);
                tampilData();
            }    
        } else {
                ubahData();
                changePanel(panelData);
                tabmodel1.setRowCount(0);
                tampilData();
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        changePanel(panelData);
    }//GEN-LAST:event_btnBatalActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int row = tableData.getSelectedRow();
        if(row != -1) {
            pilihCustomer(row);
            dispose();    
        } else {
            JOptionPane.showMessageDialog(null, "Silahkan click salah satu layanan\nDibawah ini lalu tekan pilih");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JenisLayanan dialog = new JenisLayanan(new java.awt.Frame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panelData;
    private javax.swing.JPanel panelTambah;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JTable tableData;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtIdJenis;
    private javax.swing.JTextField txtJenis;
    // End of variables declaration//GEN-END:variables

    
    
//    Tampil Data Table
    private void tampilData() {
        for(ModelJenisLayanan modelJenis : controlJenis.getData()) {
            tabmodel1.addRow(new Object[]{
                modelJenis.getIdJenisLayanan(),
                modelJenis.getNamaJenis()
            });
        }
    }
    
//    Tambah Data
    private void tambahData() {
        String idJenisLayanan = txtIdJenis.getText();
        String namaJenis = txtJenis.getText();
        ModelJenisLayanan modelJenis = new ModelJenisLayanan(idJenisLayanan, namaJenis);
        controlJenis.addData(modelJenis);
    }
    
//    Ubah Data
    private void ubahData() {
        String idJenisLayanan = txtIdJenis.getText();
        String namaJenis = txtJenis.getText();
        ModelJenisLayanan modelJenis = new ModelJenisLayanan(idJenisLayanan, namaJenis);
        controlJenis.updateData(modelJenis);
    }
    
//    Validasi tambah data
    private boolean validasiTambahData() {
        boolean valid = false;
        if(txtJenis.getText().equals("Contoh Y-Lash Premium") || txtJenis.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Mohon isi jenis layanan terlebih dahulu");
        } else {
            valid = true;
        }
        return valid;
    }
    
    //    event table
    private void eventTable() {
        event = new TableEvent() {
            @Override
            public void onEdit(int row) {
                changePanel(panelTambah);
                txtIdJenis.setEnabled(false);
                txtIdJenis.setText((String) tableData.getValueAt(row, 0));
                txtJenis.setText((String) tableData.getValueAt(row, 1));
                txtJenis.setForeground(new Color(0, 0, 0));
                btnSimpan.setText("UBAH");
            }

            @Override
            public void onDelete(int row) {
                String idJenis = (String) tableData.getValueAt(row, 0);
                ModelJenisLayanan modelJenis = new ModelJenisLayanan(idJenis, "");
                if(controlJenis.validationDelete(modelJenis)) {
                    int confirm = JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus jenis layanan ini?", "Konfirmasi", JOptionPane.YES_OPTION);
                    if(confirm == 0) {
                        if(tableData.isEditing()) {
                            tableData.getCellEditor().stopCellEditing();
                        }
                        controlJenis.deleteData(modelJenis);
                        tabmodel1.removeRow(row);
                    }
                }
            }

            @Override
            public void onView(int row) {
                
            }
        };
        
        tableData.getColumnModel().getColumn(2).setCellRenderer(new TableCellEventRender(true, true, false));
        tableData.getColumnModel().getColumn(2).setCellEditor(new TableCellEditor(event, true, true, false));
    }
    
    //  Style Table
    private void styleTable(JScrollPane scroll, JTable table, int columnTable) {
        scroll.getViewport().setBackground(new Color(255,255,255));
        JPanel panel = new JPanel();
        panel.setBackground(new Color(255,255,255));
        scroll.setCorner(JScrollPane.UPPER_RIGHT_CORNER, panel);
        scroll.setBorder(new EmptyBorder(5,10,5,10));
        table.setRowHeight(35);        
        table.getTableHeader().setDefaultRenderer(new ModelHeaderTable());
        table.setDefaultRenderer(Object.class, new ModelRenderTable(columnTable));
    }
         
//    Pilih Jenis Layanan
    private void pilihCustomer(int row) {
        modelJenis.setIdJenisLayanan((String) tableData.getValueAt(row, 0));
        modelJenis.setNamaJenis((String) tableData.getValueAt(row, 1));
    }
        
    private void cariDataTable() {
        txtCari.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = txtCari.getText();
                if(text.length() == 0) {
                    tableRowSorter1.setRowFilter(null);
                } else {
                    tableRowSorter1.setRowFilter(RowFilter.regexFilter("(?i)" + text, 0, 1));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = txtCari.getText();
                if(text.length() == 0) {
                    tableRowSorter1.setRowFilter(null);
                } else {
                    tableRowSorter1.setRowFilter(RowFilter.regexFilter("(?i)" + text, 0, 1));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                
            }
        });
    }
    
    private void changePanel(JPanel pn) {
        panel.removeAll();
        panel.add(pn);
        panel.repaint();
        panel.revalidate();
    }
    
}
