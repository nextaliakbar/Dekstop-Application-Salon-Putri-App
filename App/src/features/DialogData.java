/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Dialog.java to edit this template
 */
package features;

import config.Config;
import control.ControlCustomer;
import java.awt.Color;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import model.ModelHeaderTable;
import model.ModelRenderTable;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableRowSorter;
import model.ModelCustomer;
import model.ModelKaryawan;
import model.ModelLayanan;

/**
 *
 * @author usER
 */
public class DialogData extends java.awt.Dialog {

    /**
     * Creates new form DialogData
     */
    private DefaultTableModel tabmodel1;
    private DefaultTableModel tabmodel2;
    private DefaultTableModel tabmodel3;
    TableRowSorter<DefaultTableModel> tableRowSorter1;
    TableRowSorter<DefaultTableModel> tableRowSorter2;
    TableRowSorter<DefaultTableModel> tableRowSorter3;
    private Connection connection;
    public ModelCustomer modelCustomer;
    public ModelKaryawan modelPelayan;
    public ModelLayanan modelLayanan;
    public DialogData(java.awt.Frame parent, boolean modal, String slide) {
        super(parent, modal);
        initComponents();
        connection = Config.getConnection();
        styleTable(scrollCustomer, tableCustomer, 4);
        styleTable(scrollPelayan, tablePelayan, 2);
        styleTable(scrollLayanan, tableLayanan, 4);
        tabmodel1 = (DefaultTableModel) tableCustomer.getModel();
        tabmodel2 = (DefaultTableModel) tablePelayan.getModel();
        tabmodel3 = (DefaultTableModel) tableLayanan.getModel();
        tableRowSorter1 = new TableRowSorter<>(tabmodel1);
        tableRowSorter2 = new TableRowSorter<>(tabmodel2);
        tableRowSorter3 = new TableRowSorter<>(tabmodel3);
        tableCustomer.setRowSorter(tableRowSorter1);
        tablePelayan.setRowSorter(tableRowSorter2);
        tableLayanan.setRowSorter(tableRowSorter3);
        modelPelayan = new ModelKaryawan();
        modelLayanan = new ModelLayanan();
        modelCustomer = new ModelCustomer();
        changePanel(slide);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPelayan = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCariPelayan = new javax.swing.JTextField();
        scrollPelayan = new javax.swing.JScrollPane();
        tablePelayan = new javax.swing.JTable();
        panelLayanan = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCariLayanan = new javax.swing.JTextField();
        scrollLayanan = new javax.swing.JScrollPane();
        tableLayanan = new javax.swing.JTable();
        panelCustomer = new javax.swing.JPanel();
        panelData = new javax.swing.JPanel();
        btnTambahCustomer = new javax.swing.JButton();
        txtCariCustomer = new javax.swing.JTextField();
        scrollCustomer = new javax.swing.JScrollPane();
        tableCustomer = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        panelTambah = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtIdCustomer = new javax.swing.JTextField();
        txtNamaCustomer = new javax.swing.JTextField();
        txtNoTelp = new javax.swing.JTextField();
        scrollAlamat = new javax.swing.JScrollPane();
        textAlamat = new javax.swing.JTextArea();
        btnSimpan = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        setLayout(new java.awt.CardLayout());

        panelPelayan.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setBackground(new java.awt.Color(149, 2, 179));
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Pilih Pelayan");
        jLabel2.setOpaque(true);

        txtCariPelayan.setBackground(new java.awt.Color(255, 255, 255));
        txtCariPelayan.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtCariPelayan.setForeground(new java.awt.Color(185, 185, 185));
        txtCariPelayan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCariPelayan.setText("Cari ID Pelayan atau Nama Pelayan");
        txtCariPelayan.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(185, 185, 185)));
        txtCariPelayan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCariPelayanFocusGained(evt);
            }
        });

        tablePelayan.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tablePelayan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Pelayan", "Nama"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePelayan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePelayanMouseClicked(evt);
            }
        });
        scrollPelayan.setViewportView(tablePelayan);

        javax.swing.GroupLayout panelPelayanLayout = new javax.swing.GroupLayout(panelPelayan);
        panelPelayan.setLayout(panelPelayanLayout);
        panelPelayanLayout.setHorizontalGroup(
            panelPelayanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scrollPelayan, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPelayanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtCariPelayan)
                .addContainerGap())
        );
        panelPelayanLayout.setVerticalGroup(
            panelPelayanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPelayanLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCariPelayan, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(scrollPelayan, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE))
        );

        add(panelPelayan, "card2");

        panelLayanan.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(149, 2, 179));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pilih Layanan");
        jLabel1.setOpaque(true);

        txtCariLayanan.setBackground(new java.awt.Color(255, 255, 255));
        txtCariLayanan.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtCariLayanan.setForeground(new java.awt.Color(185, 185, 185));
        txtCariLayanan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCariLayanan.setText("Cari ID Layanan atau Nama Layanan");
        txtCariLayanan.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(185, 185, 185)));
        txtCariLayanan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCariLayananFocusGained(evt);
            }
        });

        tableLayanan.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tableLayanan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Layanan", "Nama Layanan", "Tipe Layanan", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableLayanan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableLayananMouseClicked(evt);
            }
        });
        scrollLayanan.setViewportView(tableLayanan);

        javax.swing.GroupLayout panelLayananLayout = new javax.swing.GroupLayout(panelLayanan);
        panelLayanan.setLayout(panelLayananLayout);
        panelLayananLayout.setHorizontalGroup(
            panelLayananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scrollLayanan, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayananLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtCariLayanan)
                .addContainerGap())
        );
        panelLayananLayout.setVerticalGroup(
            panelLayananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayananLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCariLayanan, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(scrollLayanan, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE))
        );

        add(panelLayanan, "card2");

        panelCustomer.setBackground(new java.awt.Color(255, 255, 255));
        panelCustomer.setLayout(new java.awt.CardLayout());

        panelData.setBackground(new java.awt.Color(255, 255, 255));

        btnTambahCustomer.setBackground(new java.awt.Color(149, 2, 179));
        btnTambahCustomer.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnTambahCustomer.setForeground(new java.awt.Color(255, 255, 255));
        btnTambahCustomer.setText("Tambah Customer Baru");
        btnTambahCustomer.setBorderPainted(false);
        btnTambahCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahCustomerActionPerformed(evt);
            }
        });

        txtCariCustomer.setBackground(new java.awt.Color(255, 255, 255));
        txtCariCustomer.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtCariCustomer.setForeground(new java.awt.Color(185, 185, 185));
        txtCariCustomer.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCariCustomer.setText("Cari ID Customer atau Nama Customer");
        txtCariCustomer.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(185, 185, 185)));
        txtCariCustomer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCariCustomerFocusGained(evt);
            }
        });

        tableCustomer.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tableCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Customer", "Nama", "No Telepone", "Alamat"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCustomerMouseClicked(evt);
            }
        });
        scrollCustomer.setViewportView(tableCustomer);

        jLabel3.setBackground(new java.awt.Color(149, 2, 179));
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Pilih Customer");
        jLabel3.setOpaque(true);

        javax.swing.GroupLayout panelDataLayout = new javax.swing.GroupLayout(panelData);
        panelData.setLayout(panelDataLayout);
        panelDataLayout.setHorizontalGroup(
            panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollCustomer, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDataLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTambahCustomer)
                .addGap(18, 18, 18)
                .addComponent(txtCariCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDataLayout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelDataLayout.setVerticalGroup(
            panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDataLayout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCariCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTambahCustomer))
                .addGap(18, 18, 18)
                .addComponent(scrollCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE))
        );

        panelCustomer.add(panelData, "card2");

        panelTambah.setBackground(new java.awt.Color(255, 255, 255));

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("ID Customer");

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Nama Customer");

        jLabel18.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("No Telpon");

        jLabel17.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Alamat");

        txtIdCustomer.setBackground(new java.awt.Color(255, 255, 255));
        txtIdCustomer.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        txtIdCustomer.setForeground(new java.awt.Color(0, 0, 0));
        txtIdCustomer.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtIdCustomer.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(185, 185, 185)));

        txtNamaCustomer.setBackground(new java.awt.Color(255, 255, 255));
        txtNamaCustomer.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        txtNamaCustomer.setForeground(new java.awt.Color(0, 0, 0));
        txtNamaCustomer.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtNamaCustomer.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(185, 185, 185)));

        txtNoTelp.setBackground(new java.awt.Color(255, 255, 255));
        txtNoTelp.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        txtNoTelp.setForeground(new java.awt.Color(0, 0, 0));
        txtNoTelp.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtNoTelp.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(185, 185, 185)));
        txtNoTelp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNoTelpKeyTyped(evt);
            }
        });

        scrollAlamat.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        textAlamat.setColumns(20);
        textAlamat.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        textAlamat.setRows(5);
        scrollAlamat.setViewportView(textAlamat);

        btnSimpan.setBackground(new java.awt.Color(149, 2, 179));
        btnSimpan.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnSimpan.setForeground(new java.awt.Color(255, 255, 255));
        btnSimpan.setText("SIMPAN");
        btnSimpan.setBorderPainted(false);
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnBatal.setBackground(new java.awt.Color(0, 0, 153));
        btnBatal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnBatal.setForeground(new java.awt.Color(255, 255, 255));
        btnBatal.setText("BATAL");
        btnBatal.setBorderPainted(false);
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTambahLayout = new javax.swing.GroupLayout(panelTambah);
        panelTambah.setLayout(panelTambahLayout);
        panelTambahLayout.setHorizontalGroup(
            panelTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTambahLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTambahLayout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollAlamat, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE))
                    .addGroup(panelTambahLayout.createSequentialGroup()
                        .addGroup(panelTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNamaCustomer, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNoTelp, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtIdCustomer)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTambahLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelTambahLayout.setVerticalGroup(
            panelTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTambahLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNamaCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNoTelp, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTambahLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scrollAlamat, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panelTambahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan)
                    .addComponent(btnBatal))
                .addGap(270, 270, 270))
        );

        panelCustomer.add(panelTambah, "card2");

        add(panelCustomer, "card2");

        setSize(new java.awt.Dimension(659, 675));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void tablePelayanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePelayanMouseClicked
        int row = tablePelayan.getSelectedRow();
        pilihPelayan(row);
        dispose();
    }//GEN-LAST:event_tablePelayanMouseClicked

    private void tableLayananMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableLayananMouseClicked
        int row = tableLayanan.getSelectedRow();
        pilihLayanan(row);
        dispose();
    }//GEN-LAST:event_tableLayananMouseClicked

    private void tableCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCustomerMouseClicked
        int row = tableCustomer.getSelectedRow();
        pilihCustomer(row);
        dispose();
    }//GEN-LAST:event_tableCustomerMouseClicked

    private void txtCariPelayanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCariPelayanFocusGained
        txtCariPelayan.setText("");
        txtCariPelayan.setForeground(new Color(0, 0 ,0));
    }//GEN-LAST:event_txtCariPelayanFocusGained

    private void txtCariLayananFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCariLayananFocusGained
        txtCariLayanan.setText("");
        txtCariLayanan.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_txtCariLayananFocusGained

    private void txtCariCustomerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCariCustomerFocusGained
        txtCariCustomer.setText("");
        txtCariCustomer.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_txtCariCustomerFocusGained

    private void btnTambahCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahCustomerActionPerformed
        panelCustomer.removeAll();
        panelCustomer.add(panelTambah);
        panelCustomer.repaint();
        panelCustomer.revalidate();
        ControlCustomer controlCustomer = new ControlCustomer();
        txtIdCustomer.setText(controlCustomer.autoID());
        txtIdCustomer.setEnabled(false);
        
    }//GEN-LAST:event_btnTambahCustomerActionPerformed

    private void txtNoTelpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoTelpKeyTyped
        char typed = evt.getKeyChar();
        if(!Character.isDigit(typed)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNoTelpKeyTyped

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        if(validasiTambahDataCustomer()) {
            tambahData();
            clearFieldAll();
            panelCustomer.removeAll();
            panelCustomer.add(panelData);
            panelCustomer.repaint();
            panelCustomer.revalidate();
            tabmodel1.setRowCount(0);
            tampilDataTableCustomer();
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        clearFieldAll();
        panelCustomer.removeAll();
        panelCustomer.add(panelData);
        panelCustomer.repaint();
        panelCustomer.revalidate();
    }//GEN-LAST:event_btnBatalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogData dialog = new DialogData(new java.awt.Frame(), true, "");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTambahCustomer;
    private javax.swing.JButton btnTambahCustomer1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel panelCustomer;
    private javax.swing.JPanel panelData;
    private javax.swing.JPanel panelData1;
    private javax.swing.JPanel panelLayanan;
    private javax.swing.JPanel panelPelayan;
    private javax.swing.JPanel panelTambah;
    private javax.swing.JScrollPane scrollAlamat;
    private javax.swing.JScrollPane scrollCustomer;
    private javax.swing.JScrollPane scrollCustomer1;
    private javax.swing.JScrollPane scrollLayanan;
    private javax.swing.JScrollPane scrollPelayan;
    private javax.swing.JTable tableCustomer;
    private javax.swing.JTable tableCustomer1;
    private javax.swing.JTable tableLayanan;
    private javax.swing.JTable tablePelayan;
    private javax.swing.JTextArea textAlamat;
    private javax.swing.JTextField txtCariCustomer;
    private javax.swing.JTextField txtCariCustomer1;
    private javax.swing.JTextField txtCariLayanan;
    private javax.swing.JTextField txtCariPelayan;
    private javax.swing.JTextField txtIdCustomer;
    private javax.swing.JTextField txtNamaCustomer;
    private javax.swing.JTextField txtNoTelp;
    // End of variables declaration//GEN-END:variables

    
    //  Style Table
    private void styleTable(JScrollPane scroll, JTable table, int columnTable) {
        scroll.getViewport().setBackground(new Color(255,255,255));
        JPanel panel = new JPanel();
        panel.setBackground(new Color(255,255,255));
        scroll.setCorner(JScrollPane.UPPER_RIGHT_CORNER, panel);
        scroll.setBorder(new EmptyBorder(5,10,5,10));
        table.setRowHeight(35);        
        table.getTableHeader().setDefaultRenderer(new ModelHeaderTable());
        table.setDefaultRenderer(Object.class, new ModelRenderTable(columnTable));
    }
    
//    Tampil Data Table Customer
    private void tampilDataTableCustomer() {
        String query = "SELECT * FROM customer";
        try {
            PreparedStatement pst = connection.prepareStatement(query);
            ResultSet rst = pst.executeQuery();
            while(rst.next()) {
                String idCustomer = rst.getString("ID_Customer");
                String namaCustomer = rst.getString("Nama_Customer");
                String noTelp = rst.getString("No_Telp");
                String alamat = rst.getString("Alamat");
                tabmodel1.addRow(new String[]{idCustomer, namaCustomer, noTelp, alamat});
            }
        } catch(Exception ex) {
            
        }
    }
    
//    Tampil Data Table Pelayan
    private void tampilDataTablePelayan() {
        String query = "SELECT ID_Karyawan, Nama_Karyawan FROM karyawan WHERE posisi='Pelayan' AND Status='Aktif'";
        try {
            PreparedStatement pst = connection.prepareStatement(query);
            ResultSet rst = pst.executeQuery();
            while(rst.next()) {
                String idPelayan = rst.getString("ID_Karyawan");
                String namaPelayan = rst.getString("Nama_Karyawan");
                tabmodel2.addRow(new String[]{idPelayan, namaPelayan});
            }
        } catch(Exception ex) {
            ex.printStackTrace();
        }
    }
    
//    Tampil Data Table Layanan
    private void tampilDataTableLayanan() {
        String query = "SELECT * FROM layanan JOIN jenis_layanan ON layanan.ID_Jenis_Layanan=jenis_layanan.ID_Jenis_Layanan";
        try {
            PreparedStatement pst = connection.prepareStatement(query);
            ResultSet rst = pst.executeQuery();
            while(rst.next()) {
                String idLayanan = rst.getString("ID_Layanan");
                String namaLayanan = rst.getString("Nama_Layanan");
                String tipeLayanan = rst.getString("Tipe_Layanan");
                double harga = rst.getDouble("Harga");
                tabmodel3.addRow(new Object[]{idLayanan, namaLayanan, tipeLayanan, harga});
            }
        } catch(Exception ex) {
            ex.printStackTrace();
        }
    }
    
//    Pilih Customer
    private void pilihCustomer(int row) {
        modelCustomer.setIdCustomer((String) tableCustomer.getValueAt(row, 0));
        modelCustomer.setNamaCustomer((String) tableCustomer.getValueAt(row, 1));
        modelCustomer.setNoTelp((String) tableCustomer.getValueAt(row, 2));
        modelCustomer.setAlamat((String) tableCustomer.getValueAt(row, 3));
    }
    
//    pilih pelayan
    private void pilihPelayan(int row) {
        modelPelayan.setIdKaryawan((String) tablePelayan.getValueAt(row, 0));
        modelPelayan.setNamaKaryawan((String) tablePelayan.getValueAt(row, 1));
    }
    
//    pilih layanan
    private void pilihLayanan(int row) {
        modelLayanan.setIdLayanan((String) tableLayanan.getValueAt(row, 0));
        modelLayanan.setTipeLayanan((String) tableLayanan.getValueAt(row, 1) + " ("+tableLayanan.getValueAt(row, 2).toString()+")");
        modelLayanan.setHarga((double) tableLayanan.getValueAt(row, 3));
    }
    
    private void changePanel(String slide) {
        switch (slide) {
            case "Customer":
                showPanel(panelCustomer);
                tampilDataTableCustomer();
                cariDataTable(txtCariCustomer, tableRowSorter1);
                break;
            case "Pelayan":
                showPanel(panelPelayan);
                tampilDataTablePelayan();
                cariDataTable(txtCariPelayan, tableRowSorter2);
                break;
            default:
                showPanel(panelLayanan);
                tampilDataTableLayanan();
                cariDataTable(txtCariLayanan, tableRowSorter3);
        }
    }
    
    private void cariDataTable(JTextField field, TableRowSorter<DefaultTableModel> tableRowSorter) {
        field.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = field.getText();
                if(text.length() == 0) {
                    tableRowSorter.setRowFilter(null);
                } else {
                    tableRowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text, 0, 1));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = field.getText();
                if(text.length() == 0) {
                    tableRowSorter.setRowFilter(null);
                } else {
                    tableRowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text, 0, 1));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                
            }
        });
    }
    
    private void showPanel(JPanel panel) {
        removeAll();
        add(panel);
        repaint();
        revalidate();
    }
        
    private void tambahData() {
        ControlCustomer controlCustomer = new ControlCustomer();
        String idCustomer = txtIdCustomer.getText();
        String namaCustomer = txtNamaCustomer.getText();
        String noTelp = txtNoTelp.getText();
        String alamat = textAlamat.getText();
        ModelCustomer modelCustomer = new ModelCustomer(idCustomer, namaCustomer, noTelp, alamat);
        controlCustomer.addData(modelCustomer);
        txtIdCustomer.setText(controlCustomer.autoID());
    }
    
    private void clearFieldAll() {
        txtNamaCustomer.setText("");
        txtNoTelp.setText("");
        textAlamat.setText("");
    }
    
    private boolean validasiTambahDataCustomer() {
        boolean valid = false;
        if(txtNamaCustomer.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Mohon isi nama customer");
        } else if(txtNoTelp.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Mohon isi no telpon customer");
        } else if(textAlamat.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Mohon isi alamat customer");
        } else {
            valid = true;
        }
        return valid;
    }
}
