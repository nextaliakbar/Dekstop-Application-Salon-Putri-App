/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package features;

import control.ControlDetailTransaksi;
import control.ControlTransaksi;
import event.TableEvent;
import java.awt.Color;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.border.EmptyBorder;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.ModelCustomer;
import model.ModelDetailTransaksi;
import model.ModelHeaderTable;
import model.ModelKaryawan;
import model.ModelRenderTable;
import model.ModelTransaksi;
import model.ModelUser;
import swing.TableCellEditor;
import swing.TableCellEventRender;

/**
 *
 * @author usER
 */
public class Laporan extends javax.swing.JPanel {

    /**
     * Creates new form Transaksi
     */
    private TableEvent event;
    private DefaultTableModel tabmodel1;
    private TableRowSorter<DefaultTableModel> tableRowSorter1;
    private ControlTransaksi controlTransaksi = new ControlTransaksi();
    private ControlDetailTransaksi controlDetail = new ControlDetailTransaksi();
    private final DecimalFormat df = new DecimalFormat("#,##0.##");
    public Laporan() {
        initComponents();
        txtTotal.setEnabled(false);
        styleTable(scrollTableData, tableData, 11);
        tabmodel1 = (DefaultTableModel) tableData.getModel();
        tableRowSorter1 = new TableRowSorter<>(tabmodel1);
        tableData.setRowSorter(tableRowSorter1);
        tampilDataTable();
        eventTable();
        cariDataTable();
        txtTotal.setText(df.format(totalTransaksi()));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        panelTable = new javax.swing.JPanel();
        scrollTableData = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        panelTotal = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtCari = new javax.swing.JTextField();
        chooserFrom = new com.toedter.calendar.JDateChooser();
        btnCari = new javax.swing.JButton();
        chooserTo = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        panelHeader = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.CardLayout());

        panel.setBackground(new java.awt.Color(185, 185, 185));

        panelTable.setBackground(new java.awt.Color(255, 255, 255));
        panelTable.setForeground(new java.awt.Color(255, 255, 255));

        tableData.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No Transaksi", "Tanggal", "ID Customer", "Nama Customer", "Total", "Bayar", "Kembali", "Jenis Pembayaran", "ID Karyawan", "Nama Karyawan", "ID User", "     Opsi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableData.setSelectionBackground(new java.awt.Color(255, 255, 255));
        tableData.setSelectionForeground(new java.awt.Color(255, 255, 255));
        scrollTableData.setViewportView(tableData);
        if (tableData.getColumnModel().getColumnCount() > 0) {
            tableData.getColumnModel().getColumn(2).setMinWidth(0);
            tableData.getColumnModel().getColumn(2).setPreferredWidth(0);
            tableData.getColumnModel().getColumn(2).setMaxWidth(0);
            tableData.getColumnModel().getColumn(5).setMinWidth(0);
            tableData.getColumnModel().getColumn(5).setPreferredWidth(0);
            tableData.getColumnModel().getColumn(5).setMaxWidth(0);
            tableData.getColumnModel().getColumn(6).setMinWidth(0);
            tableData.getColumnModel().getColumn(6).setPreferredWidth(0);
            tableData.getColumnModel().getColumn(6).setMaxWidth(0);
            tableData.getColumnModel().getColumn(7).setMinWidth(0);
            tableData.getColumnModel().getColumn(7).setPreferredWidth(0);
            tableData.getColumnModel().getColumn(7).setMaxWidth(0);
            tableData.getColumnModel().getColumn(8).setMinWidth(0);
            tableData.getColumnModel().getColumn(8).setPreferredWidth(0);
            tableData.getColumnModel().getColumn(8).setMaxWidth(0);
            tableData.getColumnModel().getColumn(9).setMinWidth(0);
            tableData.getColumnModel().getColumn(9).setPreferredWidth(0);
            tableData.getColumnModel().getColumn(9).setMaxWidth(0);
            tableData.getColumnModel().getColumn(10).setMinWidth(0);
            tableData.getColumnModel().getColumn(10).setPreferredWidth(0);
            tableData.getColumnModel().getColumn(10).setMaxWidth(0);
            tableData.getColumnModel().getColumn(11).setMinWidth(125);
            tableData.getColumnModel().getColumn(11).setPreferredWidth(125);
            tableData.getColumnModel().getColumn(11).setMaxWidth(125);
        }

        javax.swing.GroupLayout panelTableLayout = new javax.swing.GroupLayout(panelTable);
        panelTable.setLayout(panelTableLayout);
        panelTableLayout.setHorizontalGroup(
            panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(scrollTableData, javax.swing.GroupLayout.DEFAULT_SIZE, 1568, Short.MAX_VALUE))
        );
        panelTableLayout.setVerticalGroup(
            panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1006, Short.MAX_VALUE)
            .addGroup(panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelTableLayout.createSequentialGroup()
                    .addComponent(scrollTableData, javax.swing.GroupLayout.DEFAULT_SIZE, 994, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        panelTotal.setBackground(new java.awt.Color(255, 255, 255));

        jLabel24.setFont(new java.awt.Font("Dialog", 1, 26)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("TOTAL");

        txtTotal.setBackground(new java.awt.Color(255, 255, 255));
        txtTotal.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        txtTotal.setForeground(new java.awt.Color(0, 0, 0));
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtTotal.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(185, 185, 185)));

        txtCari.setBackground(new java.awt.Color(255, 255, 255));
        txtCari.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtCari.setForeground(new java.awt.Color(185, 185, 185));
        txtCari.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCari.setText("Cari No Transaksi atau Nama Customer");
        txtCari.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(185, 185, 185)));
        txtCari.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCariFocusGained(evt);
            }
        });

        chooserFrom.setBackground(new java.awt.Color(255, 255, 255));
        chooserFrom.setForeground(new java.awt.Color(0, 0, 0));
        chooserFrom.setDateFormatString("dd - MMMM - yyyy");
        chooserFrom.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N

        btnCari.setBackground(new java.awt.Color(149, 2, 179));
        btnCari.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnCari.setForeground(new java.awt.Color(255, 255, 255));
        btnCari.setText("CARI");
        btnCari.setBorderPainted(false);
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        chooserTo.setBackground(new java.awt.Color(255, 255, 255));
        chooserTo.setForeground(new java.awt.Color(0, 0, 0));
        chooserTo.setDateFormatString("dd - MMMM - yyyy");
        chooserTo.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Dari");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Sampai");

        javax.swing.GroupLayout panelTotalLayout = new javax.swing.GroupLayout(panelTotal);
        panelTotal.setLayout(panelTotalLayout);
        panelTotalLayout.setHorizontalGroup(
            panelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chooserFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chooserTo, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCari)
                .addGap(18, 18, 18)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelTotalLayout.setVerticalGroup(
            panelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCari)
                    .addGroup(panelTotalLayout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addGroup(panelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTotal)
                            .addComponent(chooserFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCari, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chooserTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        panelHeader.setBackground(new java.awt.Color(149, 2, 172));

        jLabel2.setBackground(new java.awt.Color(149, 2, 179));
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Laporan Transaksi");
        jLabel2.setOpaque(true);

        javax.swing.GroupLayout panelHeaderLayout = new javax.swing.GroupLayout(panelHeader);
        panelHeader.setLayout(panelHeaderLayout);
        panelHeaderLayout.setHorizontalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelHeaderLayout.setVerticalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addComponent(panelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(panel, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void txtCariFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCariFocusGained
        txtCari.setText("");
        txtCari.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_txtCariFocusGained

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        tabmodel1.setRowCount(0);
        tampilDataRentangWaktu();
        txtTotal.setText(String.valueOf(totalTransaksi()));
    }//GEN-LAST:event_btnCariActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private com.toedter.calendar.JDateChooser chooserFrom;
    private com.toedter.calendar.JDateChooser chooserTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panelHeader;
    private javax.swing.JPanel panelTable;
    private javax.swing.JPanel panelTotal;
    private javax.swing.JScrollPane scrollTableData;
    private javax.swing.JTable tableData;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    
//    Tampil Data Table
    private void tampilDataTable() {
        for(ModelTransaksi modelTransaksi : controlTransaksi.getData()) {
            tabmodel1.addRow(new Object[]{
            modelTransaksi.getNoTransaksi(), modelTransaksi.getTglTransaksi(),
            modelTransaksi.getModelCustomer().getIdCustomer(),
            modelTransaksi.getModelCustomer().getNamaCustomer(),
            modelTransaksi.getTotal(), modelTransaksi.getBayar(),
            modelTransaksi.getKembali(), modelTransaksi.getJenisPembayaran(),
            modelTransaksi.getModelKaryawan().getIdKaryawan(), 
            modelTransaksi.getModelKaryawan().getNamaKaryawan(),
            modelTransaksi.getModelUser().getIdUser()
            });
        }
    }
    
//    Tampil Data Detail Table
    private void tampilDataDetailTable(int row) {
        String noTransaksi = (String) tableData.getValueAt(row, 0);
        String tglTransaksi = (String) tableData.getValueAt(row, 1);
        String idCustomer = (String) tableData.getValueAt(row, 2);
        String namaCustomer = (String) tableData.getValueAt(row, 3);
        double total = (double) tableData.getValueAt(row, 4);
        double bayar = (double) tableData.getValueAt(row, 5);
        double kembali = (double) tableData.getValueAt(row, 6);
        String jenisPembayaran = (String) tableData.getValueAt(row, 7);
        String idKaryawan = (String) tableData.getValueAt(row, 8);
        String namaKaryawan = (String) tableData.getValueAt(row, 9);
        String idUser = (String) tableData.getValueAt(row, 10);
        
        ModelCustomer modelCustomer = new ModelCustomer(idCustomer, namaCustomer, "", "");
        ModelKaryawan modelKaryawan = new ModelKaryawan(idKaryawan, namaKaryawan, "", "", "", "");
        ModelUser modelUser = new ModelUser(idUser, "", "", "", "", "");
        ModelTransaksi modelTransaksi = new ModelTransaksi(noTransaksi, tglTransaksi, total, bayar, kembali, jenisPembayaran, modelCustomer, modelKaryawan, modelUser);
        ModelDetailTransaksi modelDetail = new ModelDetailTransaksi();
        modelDetail.setModelTransaksi(modelTransaksi);
        
        Dialog detail = new Dialog(null, true, modelDetail);
        detail.setVisible(true);
     }
        
    
//    Total
    private double totalTransaksi() {
        double total = 0;
        for(int a = 0; a < tableData.getRowCount(); a++) {
            double subtotal = (double) tableData.getValueAt(a, 4);
            total+=subtotal;
        }
        return total;
    }
    
    private void tampilDataRentangWaktu() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String from = sdf.format(chooserFrom.getDate());
        String to = sdf.format(chooserTo.getDate());
        for(ModelTransaksi modelTransaksi : controlTransaksi.loadData(from, to)) {
            tabmodel1.addRow(new Object[]{
            modelTransaksi.getNoTransaksi(), modelTransaksi.getTglTransaksi(),
            modelTransaksi.getModelCustomer().getIdCustomer(),
            modelTransaksi.getModelCustomer().getNamaCustomer(),
            modelTransaksi.getTotal(), modelTransaksi.getBayar(),
            modelTransaksi.getKembali(), modelTransaksi.getJenisPembayaran(),
            modelTransaksi.getModelKaryawan().getIdKaryawan(), 
            modelTransaksi.getModelKaryawan().getNamaKaryawan(),
            modelTransaksi.getModelUser().getIdUser()
            });
        }
    }
    
    
//    Cari Data Transaksi
    private void cariDataTable() {
        txtCari.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = txtCari.getText();
                if(text.length() == 0) {
                    tableRowSorter1.setRowFilter(null);
                } else {
                    tableRowSorter1.setRowFilter(RowFilter.regexFilter("(?i)" + text, 0, 3));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = txtCari.getText();
                if(text.length() == 0) {
                    tableRowSorter1.setRowFilter(null);
                } else {
                    tableRowSorter1.setRowFilter(RowFilter.regexFilter("(?i)" + text, 0, 3));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                
            }
        });
    }
    
    //  Style Table
    private void styleTable(JScrollPane scroll, JTable table, int columnTable) {
        scroll.getViewport().setBackground(new Color(255,255,255));
        JPanel panel = new JPanel();
        panel.setBackground(new Color(255,255,255));
        scroll.setCorner(JScrollPane.UPPER_RIGHT_CORNER, panel);
        scroll.setBorder(new EmptyBorder(5,10,5,10));
        table.setRowHeight(35);        
        table.getTableHeader().setDefaultRenderer(new ModelHeaderTable());
        table.setDefaultRenderer(Object.class, new ModelRenderTable(columnTable));
    }
    
//    event table
    private void eventTable() {
        event = new TableEvent() {
            @Override
            public void onEdit(int row) {
                
            }

            @Override
            public void onDelete(int row) {
 
            }

            @Override
            public void onView(int row) {
                tampilDataDetailTable(row);
            }
        };
        
        tableData.getColumnModel().getColumn(11).setCellRenderer(new TableCellEventRender(false, false, true));
        tableData.getColumnModel().getColumn(11).setCellEditor(new TableCellEditor(event, false, false, true));
    }        
}
